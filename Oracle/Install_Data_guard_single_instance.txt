 suppose we have 2 servers:
  - primary database ( hostname:dbprimary, ip:192.168.56.22)
  - standby database ( hostname:dbstandby, ip:192.168.56.23)

partition name of linux:
 /boot
 swap
 /

partition name for oracle:
 oracle's software only     /oracle   15GB
 Oracle' Data               /oradata
 fast recovery area        /fra

======================================================================================
1) config network 
  - you can run setup or edit /etc/sysconfig/network-scripts/ifcfg-eth0

# cat /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=none
IPADDR=192.168.56.22
PREFIX=24
DNS1=192.168.56.1
DOMAIN=linux.local
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME=eth0
UUID=446ae82f-7b42-4220-839c-10b36457367d
ONBOOT=yes
HWADDR=08:00:27:CB:0B:03
LAST_CONNECT=1441193134


==============================================================================================
2- config hostname on both server

on primary:

# cat /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=dbprimary.linux.local

on standby:
# cat /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=dbstandby.linux.local


- add line below to /etc/hosts on both server

192.168.56.22 dbprimary.linux.local dbprimary
192.168.56.23 dbstandby.linux.local dbstandby



================================================================================================
3) install oracle database on primary

4) install oracle , software only on standby
  - you can copy of software from primary  to stand by

on primary:
 
# su - oracle
$ cd $ORACLE_BASE
$ rsync -avHAX * oracle@dbstandby:/oracle

===================================================================================
	
5- Configuration Listener on both server, edit file $ORACLE_HOME/network/admin/listener.ora

on primary:

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME =orcl.linux.local)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = orcl)
    )
  )



LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dbprimary.linux.local)(PORT = 1521))
    )
  )

ADR_BASE_LISTENER = /oracle


on stand by:

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME =orclg.linux.local)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = orclg)
    )
  )



LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dbstandby.linux.local)(PORT = 1521))
    )
  )

ADR_BASE_LISTENER = /oracle

=================================================================================

6- start listener on both server

$ lsnrctl start

=================================================================================================

7- Configuration tnasnames.ora on both server, you can configure it on primary server and the copy it to standby server
- edit file $ORACLE_HOME/network/admin/tnsnames.ora

oraprimary =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = dbprimary.linux.local)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl.linux.local)
    )
  )

orastandby =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = dbstandby.linux.local)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orclg.linux.local)
    )
  )

=================================================================================================

8- test listener on both server

$ tnsping oraprimary

TNS Ping Utility for Linux: Version 11.2.0.4.0 - Production on 06-SEP-2015 09:20:47
Copyright (c) 1997, 2013, Oracle.  All rights reserved.
Used parameter files:
/oracle/product/11.2.0/db_1/network/admin/sqlnet.ora

Used TNSNAMES adapter to resolve the alias
Attempting to contact (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = dbprimary.linux.local)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = orcl.linux.local)))
OK (0 msec)


$ tnsping orastandby

TNS Ping Utility for Linux: Version 11.2.0.4.0 - Production on 06-SEP-2015 09:21:11
Copyright (c) 1997, 2013, Oracle.  All rights reserved.
Used parameter files:
/oracle/product/11.2.0/db_1/network/admin/sqlnet.ora


Used TNSNAMES adapter to resolve the alias
Attempting to contact (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = dbstandby.linux.local)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = orclg.linux.local)))
OK (0 msec)

=================================================================================================
9- create password file file on both server with the same password

$ cd $ORACLE_HOME/dbs
$ orapwd file=orapworcl force=y entries=3 password=xxxxxx

=================================================================================================
10- Check Primary server is in Archive mode 
 
$ sqlplus / as sysdba

SQL> select log_mode from v$database;
LOG_MODE
------------
NOARCHIVELOG



- For configuing Archive mode use:

SQL> alter system set log_archive_format='%t_%s_%r.dbf'  scope=spfile;
SQL> alter system set log_archive_dest_1='LOCATION=/fra' scope=both;
SQL> shutdown immediate
SQL> startup  mount
SQL> alter database archivelog;
SQL> alter database open;

=============================================================================================
11-  Checking database is in OMF (Oracle-Managed File)

SQL> show parameter file_dest

NAME                                            TYPE        VALUE
------------------------------------ ----------- ------------------------------
db_create_file_dest		     string	 /oradata
db_recovery_file_dest		     string	 /fra
db_recovery_file_dest_size	     big integer 9412M


- if db_create_file_dest and db_recovery_file_dest is not set, using command below:

SQL> alter system set db_create_file_dest = '/oradata'   scope=both;
SQL> alter system set db_recovery_file_dest = '/fra'    scope=both;

=============================================================================================

12- Enable force logging on primary server 

SQL> alter database force logging;

=============================================================================================

13- Create Standby redo logs  

on primary sever:

 Number of standby redo log file groups per thread =  maximum number of logfiles for each thread + 1


    SRL = Standby Reod Logs
    ORL = Online Redo Logs
    SRL = ORL +1

SQL> select GROUP#,THREAD# , BYTES from v$log;

    GROUP#    THREAD#      BYTES
   ----------     -------------       -------------
         1          1                52428800
         2          1                52428800
         3          2                52428800
         4          2                52428800

		

SQL> select group#,thread#,sequence#, status from v$standby_log;
   no rows selected
   
-if the above command shows any standby redo logs you should delete it by below command:
 n = group number
 
 SQL> alter database add logfile size 200m;
 SQL> alter database add logfile size 200m;
   
   mamoolan 5 ta 7 ta online log misazim.
   for example : we have 5 online redo log ==> we should make 6 standby redo log
   
 SQL> alter database drop standby logfile  group n;

 for creating standby redo logs :   
  
 SQL> alter database add standby logfile thread &threadno group &groupno size &&size;

=============================================================================================
14- Config parameters on primary server

SQL> alter system set standby_file_management=AUTO;

SQL> alter system set log_archive_config='DG_CONFIG=(orcl,orclg)';

SQL> alter system set log_archive_dest_1='LOCATION=/fra VALID_FOR=(ALL_LOGFILES,ALL_ROLES) db_unique_name=orcl';

SQL> alter system set log_archive_dest_2='service=orastandby lgwr sync affirm valid_for=(online_logfiles, primary_role) db_unique_name=orclg'; 

SQL> alter system set fal_server='orastandby';

==========================================================================================================
15-create folder on stand by server

$ mkdir -p /oracle/admin/orclg/adump
$ mkdir -p /oradata/ORCLG/controlfile
$ mkdir -p /oradata/ORCLG/datafile
$ mkdir -p /oradata/ORCLG/onlinelog
$ mkdir -p /fra/ORCLG/onlinelog
$ mkdir -p /fra/ORCLG/controlfile

==========================================================================================================
16- create Parameter File on standby server and start database in nomount mode

$ cd $ORACLE_HOME/dbs

$ vim initorclg.ora

*.db_name='orcl'

SQL> startup nomount pfile='?/dbs/initorclg.ora'


==========================================================================================================
17- if there is not backup go to step 18, otherwise go to step 19

==========================================================================================================

# vi /etc/fstab
tmpfs                   /dev/shm                tmpfs   defaults,size=8G        0 0

# mount -o remount /dev/shm

#df -h
tmpfs                 8.0G  264K  8.0G   1% /dev/shm




18- duplicate database with active database 

on primary or standby server:

$ rman target sys/Admin11g@oraprimary auxiliary sys/Admin11g@orastandby

RMAN>
run{
 allocate channel ch1 type disk;
 allocate channel ch2 type disk;
 allocate channel ch3 type disk;
 allocate auxiliary channel stby type disk;
 duplicate target database for standby from active database
spfile
 parameter_value_convert 'orcl','orclg'
 set db_unique_name='orclg'
 set db_file_name_convert='/oradata/ORCL/datafile/','/oradata/ORCLG/datafile/'
 set log_file_name_convert='/oradata/ORCL/onlinelog/','/oradata/ORCLG/onlinelog/','/fra/ORCL/onlinelog/','/fra/ORCLG/onlinelog/'
 set control_files='/oradata/ORCLG/controlfile/control01.ctl','/fra/ORCLG/controlfile/control02.ctl'
 set log_archive_max_processes='5'
 set fal_client='orastandby'
 set fal_server='oraprimary'
 set standby_file_management='AUTO'
 set log_archive_config='dg_config=(orcl,orclg)'
 set log_archive_dest_1='LOCATION=/fra/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES) db_unique_name=orclg';
}

این روی سیستم خودم کار کرده و اکی است
RMAN>
run{
 allocate channel ch1 type disk;
 allocate channel ch2 type disk;
 allocate channel ch3 type disk;
 allocate auxiliary channel stby type disk;
 duplicate target database for standby from active database
spfile
 parameter_value_convert 'primary','standby'
 set db_unique_name='standby'
 set db_file_name_convert='/oradata/PRIMARY/datafile/','/oradata/standby/datafile/'
 set log_file_name_convert='/oradata/PRIMARY/onlinelog/','/oradata/standby/onlinelog/','/fra/PRIMARY/onlinelog/','/fra/standby/onlinelog/'
 set control_files='/oradata/standby/controlfile/control01.ctl','/fra/standby/controlfile/control02.ctl'
 set log_archive_max_processes='5'
 set fal_client='orastandby'
 set fal_server='oraprimary'
 set standby_file_management='AUTO'
 set log_archive_config='dg_config=(primary,standby)'
 set log_archive_dest_1='LOCATION=/fra/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES)  db_unique_name=standby';
}


-- after finish of rman go to step  22
==========================================================================================================
19- Now create a backup fom primary database
- if there is enough space on fra create a folder it's called backup

$ mkdir /fra/backup

- otherwise you create a new partition for backup, it's called /backup

$ rman target /

RMAN> run {
         backup as backupset database include current controlfile format '/fra/backup/full_%d_%T_%s.bck';
         backup archivelog all format '/fra/backup/arch_%d_%T_%s.bck';
         backup current controlfile for standby  format '/fra/backup/cfstby_%d_%T_%s.ctl';
       }


==========================================================================================================
20- you must copy all backup to standby server or create NFS on primary server

on primary server:
# vim /etc/exports
/fra/backup  192.168.56.0/24(sync,rw)

# /etc/init.d/nfs start

please add lines below to iptables for opening ports of NFS on firewall

# vim /etc/sysconfig/iptables

-A INPUT -p tcp -m state --state NEW -m tcp --dport 111 -j ACCEPT 
-A INPUT -p tcp -m state --state NEW -m tcp --dport 2049 -j ACCEPT 
-A INPUT -p udp -m state --state NEW -m udp --dport 111 -j ACCEPT 
-A INPUT -p udp -m state --state NEW -m udp --dport 2049 -j ACCEPT 


# /etc/init.d/iptables restart


on standby server:

$ mkdir /fra/backup

# mount 192.168.56.22:/fra/backup  /fra/backup/

# df -h	

Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup-lv_root
                       22G  3.9G   17G  19% /
tmpfs                 2.0G  224K  2.0G   1% /dev/shm
/dev/sda1             477M   34M  419M   8% /boot
/dev/sdc1             7.8G   28M  7.4G   1% /oradata
/dev/sdd1              15G  4.6G  9.4G  33% /oracle
/dev/sdb1             7.8G   39M  7.4G   1% /fra
/dev/sr0              4.4G  4.4G     0 100% /media/dvd
192.168.56.22:/fra/backup
                      9.8G  2.1G  7.2G  23% /fra/backup

==========================================================================================================
21- On standby server connect by rman

$ rman target sys/Admin11g@oraprimary  auxiliary /

RMAN> 
run{
 allocate channel ch1 type disk;
 allocate channel ch2 type disk;
 allocate auxiliary channel stby type disk;
 duplicate target database for standby 
spfile
 parameter_value_convert 'primary','standby'
 set db_unique_name='standby'
 set db_file_name_convert='/oradata/PRIMARY/datafile/','/oradata/standby/datafile/'
 set log_file_name_convert='/oradata/PRIMARY/onlinelog/','/oradata/standby/onlinelog/','/fra/PRIMARY/onlinelog/','/fra/standby/onlinelog/'
 set control_files='/oradata/standby/controlfile/control01.ctl','/fra/standby/controlfile/control02.ctl'
 set log_archive_max_processes='5'
 set fal_client='orastandby'
 set fal_server='oraprimary'
 set standby_file_management='AUTO'
 set log_archive_config='dg_config=(primary,standby)'
 set log_archive_dest_1='LOCATION=/fra/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES) db_unique_name=standby';
}

==========================================================================================================
22-change primary database to  maximize availability

SQL> alter  database  set  standby  database to maximize availability;

==========================================================================================================
23- open standby database in open mode

$ sqlplus / as sysdba

SQL> alter database open;

SQL>  select open_mode from v$database;

OPEN_MODE
--------------------
READ ONLY

==========================================================================================================
24- Start recover manager on standby server

SQL> alter database recover   managed standby database using current logfile disconnect;


==========================================================================================================
25- Check the archivelog send and apply on standby database

on primary server:

SQL> archive log list 	
Current log sequence	       12
Database log mode	       Archive Mode
Automatic archival	       Enabled
Archive destination	       /fra
Oldest online log sequence     10
Next log sequence to archive   14
Current log sequence	       14



SQL> alter system switch logfile;

on standby server:

SQL> select thread#,sequence#,applied from v$archived_log

   THREAD#  SEQUENCE# APPLIED
---------- ---------- ---------
	 1	    9 YES
	 1	   10 YES
	 1	   11 YES
	 1	   12 YES
	 1	   13 IN-MEMORY

-always you must see 
 sequence# = Current log sequence -1
 14-1 = 13

==========================================================================================================
26- Checking is there any gap in standby server

SQL>  select * from v$archive_gap;

no rows selected

-- you always must see "no rows selected", if you see a gap you must solve it

==========================================================================================================
27- if you have a problem in sending archivelog to standby

on primary server:

***dest2 for standby***
SQL> select error from v$archive_dest where dest_id=2;
اگر چیزی نشان نداد همه چیز درست است

SQL> select dest_id,dest_name error from v$archive_dest where dest_id=2;
==========================================================================================================
on primary server:

 SQL> select open_mode from v$database;

 open_mode
 - - - - - -
 read,write
 
 
 on standby server
 
  SQL> select open_mode from v$database;
  
 open_mode
 - - - - - -
 mounted
 ==========================================================================================================
 if we want standby=> open mode and mount ==> read only must follow this command on standby
 SQL> alter database recover managed standby database cancel;
 SQL> alter database open;
 
 check:
 SQL> select open_mode from v$database;
 
 open_mode
 -----------
 read only
 
 never seen => read,write always=read only
 
 now again>
 SQL> alter database recover managed standby database using current logfile disconnect;
 
 for see archivelog on standby follow this on primary=>
  SQL> select name,thread#,sequence#,applied from v$archived_log where name='orastandby';
 ==========================================================================================================
 if database in standby=shu immediate or connection lost=>
 
 1)check network
 
 2)startup database on standby
 
 3)check logfile with command on standby server
 
   SQL> select thread#,sequence#,applied from v$archived_log;

or check logfile with command on primary server

   SQL> select name,thread#,sequence#,applied from v$archived_log where name='orastandby'; 
 
 4) see shiping is correct but applied is so no , for yes applying we must follow this command:
 
   SQL> alter database recover managed standby database using current logfile disconnect;
   
 ==========================================================================================================
 
 
SQL> select protection_mode from v$database;

protection mode
----------------------
maximum availability

 ==========================================================================================================
 
 برای نود سوم
 for installation node 3:
 
 1- installation linux 
 2- installation software oracle and config and chmod and chown and bash_profile and etc...
 3- on standby server ==> create pfile from spfile and mv to standby2 server and (change parameter than standby to standby2)
 4- create password file file on both server with the same password

$ cd $ORACLE_HOME/dbs
$ orapwd file=orapworcl force=y entries=3 password=xxxxxx

 5- morede 3 ra az server asli ya standby inja migozaram
 6- listener va tnsnames va /etc/hosts ha ra dar hameye server ha bayad dorost konim 
 7- tavajoh be log_archive_dest_1 va log_archive_dest_2 va log_archive_dest_3
 8- ezafe kardane fal_client va fal_server dar hameye server ha makhsoosan jadide
 9- agar errore memory target didim=> 
 
 #vi /etc/fstab
 /dev/shm default,size=8G
 
 #mount -o remount /dev/shm
 
 10- tavajoh konin ke hameye folder ha mojod bashand
 11- .bash_profile ra dar hameye server ha deghat konid ke kheili moheme
 12- meghdare log_archive_dest ha bayad ba meghdare file_dest barabar bashand
 13- sakht spfile az rooye pfile ii ke sakhte iim
 
*.audit_file_dest='/oracle/admin/standby2/adump'
*.audit_trail='db'
*.compatible='11.2.0.4.0'
*.control_files='/oradata/STANDBY2/controlfile/o1_mf_gg9pwsqd_.ctl','/fra/STANDBY2/controlfile/o1_mf_gg9pwsrs_.ctl'                                                                                                                    Y2/controlfile/o1_mf_gg9pwsrs_.ctl'
*.db_block_size=8192
*.db_create_file_dest='/oradata'
*.db_unique_name='standby2'
*.db_domain='baharan'
*.db_name='primary'
*.db_recovery_file_dest_size=14784921600
*.db_recovery_file_dest='/fra/archive'
*.diagnostic_dest='/oracle'
*.fal_client='oraprimary'
*.fal_server='orastandby','orastandby2'
*.log_archive_config='DG_CONFIG=(primary,standby,standby2)'
*.log_archive_dest_1='LOCATION=/fra/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES) db_unique_name=standby2'                                                                                                                     b_unique_name=standby2'
*.log_archive_format='%t_%s_%r.dbf'
*.memory_max_target=8438939648
*.memory_target=8438939648
*.open_cursors=300
*.pga_aggregate_target=1678770176
*.processes=500
*.remote_login_passwordfile='EXCLUSIVE'
*.sessions=555
*.sga_target=6744440832
*.standby_file_management='AUTO'
*.undo_tablespace='UNDOTBS1'
*.db_file_name_convert='/oradata/PRIMARY/datafile/', '/oradata/STANDBY2/datafile/'                                                                                                                     /'
*.log_file_name_convert='/oradata/PRIMARY/onlinelog/', '/oradata/STANDBY2/onlinelog/', '/fra/PRIMARY/onlinelog/', '/fra/STANDBY2/onlinelog/'                                                                                                                     log/', '/fra/PRIMARY/onlinelog/', '/fra/STANDBY2/onlinelog/'
*.fal_server='oraprimary'
*.fal_client='orastandby2'

 
  
 14- SQL> startup nomount 
 15- SQL> show parameter name ra check konid
 16- $ rlwrap rman target sys@oraprimary/sysadmin auxiliary sys@orastandby2/sysadmin => password ha yani (sysadmin) bayad mesle ham bashand
 17- dastoorat paiin ra beznin
 
بدون بکاپ (دنبال بکاپ نمی گردد)
run{
 allocate channel ch1 type disk;
 allocate channel ch2 type disk;
 allocate channel ch3 type disk;
 allocate channel ch4 type disk;
 allocate auxiliary channel stby1 type disk;
 allocate auxiliary channel stby2 type disk;
 allocate auxiliary channel stby3 type disk;
 allocate auxiliary channel stby4 type disk;
 duplicate target database for standby from active database nofilenamecheck;
}

==========================================================================================================

دنبال بکاپ می گردد
run{
 allocate channel ch1 type disk;
 allocate channel ch2 type disk;
 allocate channel ch3 type disk;
 allocate channel ch4 type disk;
 allocate auxiliary channel stby1 type disk;
 allocate auxiliary channel stby2 type disk;
 allocate auxiliary channel stby3 type disk;
 allocate auxiliary channel stby4 type disk;
 duplicate target database for standby nofilenamecheck;
}

 18- dar halate mount ast va agar irad dasht yekbar database ra khamoosh o roshan mikonim
 19- SQL> alter database recover   managed standby database using current logfile disconnect from session;  
from session ra bezanim ya nazanim farghi nadare

==========================================================================================================

BROKER
 
 1- yes shodane flashback_on dar hameye server ha

SQL> select open_mode,database_role,protection_mode,flashback_on from v$database;

OPEN_MODE            DATABASE_ROLE    PROTECTION_MODE      FLASHBACK_ON
-------------------- ---------------- -------------------- ------------------
READ ONLY WITH APPLY PHYSICAL STANDBY MAXIMUM AVAILABILITY NO

agar flashback_on = NO bood bayad an ra YES konim 
SQL>alter database flashback on;

ERROR: ora-01153 ya ora 01112 ==> we must stop redo apply ==> cancel kardane recovery manager

SQL> alter database recover managed standby database cancel;                 ==> to stop redo apply
SQL> alter database recover managed standby database using current logfile;  ==> to start redo apply

agara nashod database ra shu mikonim bad dar halate mount database ra roshan mikonim va flashback
ra on mikonim bad database ra open mikonim :
 SQL>startup mount
 SQL>alter database flashback on;
 SQL>alter database open;
 
========================================================================================================== 
 
 2- installation broker in 3 server= first primary 
 sepas standby bad standby2
 
 in primary server>
 
 SQL> show parameter broker

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
dg_broker_config_file1               string      
                                                 
dg_broker_config_file2               string      
dg_broker_start                      boolean     FALSE

 #mkdir -p /oradata/broker/;
 #mkdir -p /fra/broker/;
 
 SQL> alter system set dg_broker_config_file1='/oradata/broker/dr1primary.dat';
 SQL> alter system set dg_broker_config_file2='/fra/broker/dr2primary.dat';
 SQL> alter system set dg_broker_start= TRUE;
 
 SQL> show parameter broker
 
 NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
dg_broker_config_file1               string      /oradata/broker/dr1primary.dat
dg_broker_config_file2               string      /fra/broker/dr2primary.dat
dg_broker_start                      boolean     TRUE


 in standby>
 
 #mkdir -p /oradata/broker/;
 #mkdir -p /fra/broker/;
 
 SQL> alter system set dg_broker_config_file1='/oradata/broker/dr1standby.dat';
 SQL> alter system set dg_broker_config_file2='/fra/broker/dr2standby.dat';
 SQL> alter system set dg_broker_start= TRUE;
 
 SQL> show parameter broker
 
 NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
dg_broker_config_file1               string      /oradata/broker/dr1standby.dat
dg_broker_config_file2               string      /fra/broker/dr2standby.dat
dg_broker_start                      boolean     TRUE

 in standby2>
 
 #mkdir -p /oradata/broker/;
 #mkdir -p /fra/broker/;

 SQL> alter system set dg_broker_config_file1='/oradata/broker/dr1standby2.dat';
 SQL> alter system set dg_broker_config_file2='/fra/broker/dr2standby2.dat';
 SQL> alter system set dg_broker_start= TRUE;
 
 SQL> show parameter broker
 
 NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
dg_broker_config_file1               string      /oradata/broker/dr1standby2.dat                                                
dg_broker_config_file2               string      /fra/broker/dr2standby2.dat
dg_broker_start                      boolean     TRUE
==========================================================================================================

 3- baraye inke file haye (dr1primary.dat,dr2primary.dat,dr1standby.dat,dr2standby.dat,
 dr1standby2.dat,dr2standby2.dat) dorost shavand bayad chand ta kar anjam dahim:
 
 $rlwrap dgmgrl sys/sysadmin
 DGMGRL>  show configuration
 DGMGRL> help

 DGMGRL> help create

Creates a broker configuration

Syntax:

  CREATE CONFIGURATION <configuration name> AS
    PRIMARY DATABASE IS <database name>
    CONNECT IDENTIFIER IS <connect identifier>;

DGMGRL> CREATE CONFIGURATION hamed_DG_COnFiG AS PRIMARY DATABASE IS primary CONNECT IDENTIFIER IS oraprimary;

 
 DGMGRL> help add

Adds a standby database to the broker configuration

Syntax:

  ADD DATABASE <database name>
    [AS CONNECT IDENTIFIER IS <connect identifier>]
    [MAINTAINED AS {PHYSICAL|LOGICAL}];


	for add standby =>
  DGMGRL> add database standby AS CONNECT IDENTIFIER IS orastandby MAINTAINED AS PHYSICAL;
 
    for add standby2 =>
  DGMGRL> add database standby2 AS CONNECT IDENTIFIER IS orastandby2 MAINTAINED AS PHYSICAL;
  
  and faal sazie config:
  
  DGMGRL>ENABLE CONFIGURATION;
==========================================================================================================
bad az in ke show configuration ra dar hame ye server ha didim hala dar hameye server ha listener ra bayad
dorost konim be in soorat:


for primary server:


SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = primary.baharan)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = primary)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = primary.baharan_DGMGRL)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = primary)
    )
  )

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dgprimary.baharan)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

ADR_BASE_LISTENER = /oracle





for standby server:

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = standby.baharan)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = standby)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = standby.baharan_DGMGRL)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = standby)
    )
  )

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dgstandby.baharan)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

ADR_BASE_LISTENER = /oracle







for standby2 server:

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = standby2.baharan)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = standby2)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = standby2.baharan_DGMGRL)
      (ORACLE_HOME = /oracle/product/11.2.0/db_1)
      (SID_NAME = standby2)
    )
  )

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dgstandby2.baharan)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

ADR_BASE_LISTENER = /oracle
==========================================================================================================
END of BROKER
==========================================================================================================
start fast start failover=>



==========================================================================================================

ERROR at line 1:
ORA-01153: an incompatible media recovery is active


SQL> alter database recover cancel;
alter database recover cancel
*
ERROR at line 1:
ORA-01112: media recovery not started

